---
# tasks file for installing_a_business_platform
- name: Tomcat status
  shell: "{{ alf_home }}/alfresco.sh status tomcat"
  register: tomcat_status

- name: Tomcat stop
  shell: "{{ alf_home }}/alfresco.sh stop tomcat"
  when: tomcat_status.stdout == "tomcat already running"

- name: Remove catalina.out
  file:
    path: "{{ catalina_home }}/logs/catalina.out"
    state: absent

- name: Start postgresql
  command: "{{ alf_home }}/alfresco.sh start postgresql"
  register: status_postgresql

- block:
  - name: Удаление старых файлов «alfresco.war» и «share.war»
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ catalina_home }}/webapps/alfresco.war"
      - "{{ catalina_home }}/webapps/share.war"

  - name: Копирование новых файлов «alfresco.war» и «share.war»
    copy: src={{ item }} dest={{ catalina_home }}/webapps
    with_items:
      - alfresco.war
      - share.war

  - name: Удаление каталогов «alfresco» и «share»
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ catalina_home }}/webapps/alfresco"
      - "{{ catalina_home }}/webapps/share"

- name: Очистка моделей solr
  file:
    path: "{{ alf_data_home }}/solr4/model"
    state: absent

- block:
  - name: Имя БД
    shell: "cat {{ catalina_home }}/shared/classes/alfresco-global.properties | grep db.name= | cut -f2 -d'='| cut -f1 -d' '"
    register: db_name
  - set_fact: db_name={{ db_name.stdout }}

  - name: Пароль БД
    shell: "cat {{ catalina_home }}/shared/classes/alfresco-global.properties | grep db.password= | cut -f2 -d'='| cut -f1 -d' '"
    register: db_pass
  - set_fact: db_pass={{ db_pass.stdout }}

  - name: Порт
    shell: "cat {{ catalina_home }}/shared/classes/alfresco-global.properties | grep share.host= | cut -f2 -d'='| cut -f1 -d' '"
    register: share_host
  - set_fact: share_host={{ share_host.stdout }}

- block: 
  - name: Создание БД bj
    environment:
      PGHOST: localhost
    postgresql_db:
        name: bj # required. name of the database to add or remove
        login_user: postgres # not required. The username used to authenticate with
        port: 5432 # not required. Database port to connect to.
        owner: alfresco # not required. Name of the role to set as owner of the database
        login_password: "{{ db_pass }}" # not required. The password used to authenticate with
    register: postgres

  - name: Копирование businessjournal.war
    copy: src=businessjournal.war dest={{ catalina_home }}/webapps

  - name: Распаковка businessjournal.war
    shell: "unzip -qq  {{ catalina_home }}/webapps/businessjournal.war -d {{ catalina_home }}/webapps"

  - name: Удаление старого businessjournal.war
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ catalina_home }}/webapps/businessjournal.war"

  - name: Замена строк
    lineinfile:
      dest: "{{ catalina_home }}/webapps/WEB-INF/classes/business-journal.properties"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: '^datanucleus.password=', line: 'datanucleus.password={{ db_pass }}' }
      - { regexp: '^datanucleus.ConnectionURL=', line: 'datanucleus.ConnectionURL=jdbc:postgresql://{{ share_host }}:5432/bj' }

  - name: Пакуем businessjournal.war
    shell: "zip -r {{ catalina_home }}/webapps/businessjournal.war {{ catalina_home }}/webapps/WEB-INF {{ catalina_home }}/webapps/META-INF"

  - name: Удаление {{ catalina_home }}/webapps/WEB-INF {{ catalina_home }}/webapps/META-INF
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ catalina_home }}/webapps/WEB-INF"
      - "{{ catalina_home }}/webapps/META-INF"

- block:
  - name: Копирование notificationstore.war
    copy: src=notificationstore.war dest={{ catalina_home }}/webapps

  - name: Создание БД notifications
    environment:
      PGHOST: localhost
    postgresql_db:
        name: notifications # required. name of the database to add or remove
        login_user: postgres # not required. The username used to authenticate with
        port: 5432 # not required. Database port to connect to.
        owner: alfresco # not required. Name of the role to set as owner of the database
        login_password: "{{ db_pass }}" # not required. The password used to authenticate with
    register: postgres

  - name: Добавление строк 
    shell: 
      cmd: |
          cat >> {{ catalina_home }}/shared/classes/alfresco-global.properties << EOL
        
          notificationstore.datanucleus.dbms=postgres
          notificationstore.datanucleus.ConnectionDriverName=org.postgresql.Driver
          notificationstore.datanucleus.ConnectionURL=jdbc:postgresql://{{ share_host }}:5432/notifications
          notificationstore.datanucleus.ConnectionUserName={{ db_name }}
          notificationstore.datanucleus.ConnectionPassword={{ db_pass }}
          notificationstore.datanucleus.generateSchema.database.mode=create
          notificationstore.brokerURL=tcp://127.0.0.1:61616
          notifications.store.protocol=http
          notifications.store.host=127.0.0.1
          notifications.store.port=8080
          notifications.store.name=notifications
          EOL

- name: Удаление security.anyDenyDenies=false 
  lineinfile:
    dest: "{{ catalina_home }}/shared/classes/alfresco-global.properties"
    regexp: "security.anyDenyDenies=false"
    state: absent

- name: Параметр для разворачивания справочников
  shell:
    cmd: |
        cat >> {{ catalina_home }}/shared/classes/alfresco-global.properties << EOL
        
        lecm.dictionaries.bootstrapOnStart=true
        EOL

- block: 
  - name: Создание БД reporting
    environment:
      PGHOST: localhost
    postgresql_db:
        name: reporting # required. name of the database to add or remove
        login_user: postgres # not required. The username used to authenticate with
        port: 5432 # not required. Database port to connect to.
        owner: alfresco # not required. Name of the role to set as owner of the database
        login_password: "{{ db_pass }}" # not required. The password used to authenticate with
    register: postgres

  - name: Добавление строк 
    shell: 
      cmd: |
          cat >> {{ catalina_home }}/shared/classes/alfresco-global.properties << EOL
        
          reporting.db.name=reporting
          reporting.db.host={{ share_host }}
          reporting.db.port=5432
          reporting.db.username=alfresco
          reporting.db.password={{ db_pass }}
          reporting.db.driver=org.postgresql.Driver
          reporting.db.url=jdbc:postgresql://{{ share_host }}:5432/reporting
          EOL

- name: Лицензия
  copy: src=lecmlicense dest={{ catalina_home }}/shared/classes

- name: Какие-то настройки, без которых не работает БД
  shell: 
    cmd: |
        cat >> {{ catalina_home }}/shared/classes/alfresco-global.properties << EOL
        
        businessjournal.port=8080
        businessjournal.host=127.0.0.1
        datanucleus.ConnectionURL=jdbc:postgresql://{{ share_host }}:5432/bj
        datanucleus.ConnectionUserName=postgres
        datanucleus.ConnectionPassword={{ db_pass }}
        EOL

- name: Remove catalina.out
  file:
    path: "{{ catalina_home }}/logs/catalina.out"
    state: absent

- name: Restart
  shell: "{{ alf_home }}/alfresco.sh start tomcat"

- name: Ожидание запуска сервера
  wait_for:
    path: "{{ catalina_home }}/logs/catalina.out"
    search_regex: 'INFO: Server startup in'
    timeout: 600

- name: Tomcat Stop
  shell: "{{ alf_home }}/alfresco.sh stop tomcat"

- name: Удаление alfresco.war и share.war
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ catalina_home }}/webapps/alfresco.war"
    - "{{ catalina_home }}/webapps/share.war"

- name: Tomcat Start
  shell: "{{ alf_home }}/alfresco.sh start tomcat"